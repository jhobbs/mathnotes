

# This file was *autogenerated* from the file taylor_series_approx.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_16 = Integer(16); _sage_const_3 = Integer(3); _sage_const_10 = Integer(10)
def find_coeffs(x, y, rhs, initial_values, N):
    derivatives = [diff(rhs, x, i) for i in range(N)]
    args = [
        diff(y, x, i)(x=_sage_const_0 ) == initial_values[i] for i in range(len(initial_values)) 
    ]
    values = initial_values.copy()
    
    for n in range(N):
        value = derivatives[n].subs(*args, x=_sage_const_0 )
        args.append(diff(y, x, n+len(initial_values))(x=_sage_const_0 ) == value)
        values.append(value)
        
    p_n = _sage_const_0 
    for i, value in enumerate(values):
        p_n += (value * (x**i))/factorial(i)
    
    show(p_n)
    
x = var('x')
y = function('y')(x)
df = sin(x) + _sage_const_16  * y**_sage_const_3 
find_coeffs(x, y, df, [_sage_const_0 , _sage_const_0 ], _sage_const_10 )

