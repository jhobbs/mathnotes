{"version":3,"file":"electric-field-CoGGpvCG.js","sources":["../../demos/physics/electric-field.ts"],"sourcesContent":["// Electric field simulation - TypeScript module version\nimport p5 from 'p5';\nimport type { DemoInstance, DemoConfig } from '@framework/types';\n\ninterface Particle {\n  pos: p5.Vector;\n  charge: number;\n  inertia: p5.Vector;\n  color: p5.Color;\n  \n  paint(p: p5): void;\n  get m(): number;\n  addM(charge: number): void;\n  get p(): p5.Vector;\n  addPos(force: p5.Vector): void;\n}\n\ninterface Force {\n  pos: p5.Vector;\n  mag: p5.Vector;\n  \n  update(charges: Particle[]): void;\n  paint(p: p5): void;\n}\n\nclass ParticleImpl implements Particle {\n  pos: p5.Vector;\n  charge: number;\n  inertia: p5.Vector;\n  color: p5.Color;\n  \n  constructor(p: p5, xPos: number, yPos: number, charge: number) {\n    this.pos = p.createVector(xPos, yPos);\n    this.charge = charge;\n    this.inertia = p.createVector(0, 0);\n    \n    if (charge > 0) {\n      this.color = p.color(255, 0, 0); // Red for positive\n    } else {\n      this.color = p.color(0, 0, 255); // Blue for negative\n    }\n  }\n  \n  paint(p: p5): void {\n    p.colorMode(p.RGB); // Ensure RGB mode for particle colors\n    p.noStroke();\n    if (this.charge > 0) {\n      p.fill(255, 0, 0); // Red for positive\n    } else {\n      p.fill(0, 0, 255); // Blue for negative\n    }\n    p.circle(this.pos.x, this.pos.y, p.sqrt(p.abs(this.charge) * 100 / p.PI) - 5);\n  }\n  \n  get m(): number {\n    return this.charge;\n  }\n  \n  addM(charge: number): void {\n    this.charge += charge;\n  }\n  \n  get p(): p5.Vector {\n    return this.pos;\n  }\n  \n  addPos(force: p5.Vector): void {\n    this.inertia.add(force);\n    this.pos.sub(this.inertia);\n  }\n}\n\nclass ForceImpl implements Force {\n  pos: p5.Vector;\n  mag: p5.Vector;\n  private p: p5;\n  \n  constructor(p: p5, xPos: number, yPos: number) {\n    this.p = p;\n    this.pos = p.createVector(xPos, yPos);\n    this.mag = p.createVector(0, 0);\n  }\n  \n  update(charges: Particle[]): void {\n    this.mag = getElectrostaticForce(this.p, charges, this.pos, -1);\n  }\n  \n  paint(p: p5): void {\n    const distance = p.dist(this.pos.x, this.pos.y, this.pos.x + this.mag.x * 100, this.pos.y + this.mag.y * 100);\n    p.stroke(p.map(distance, 0, 50, 150, 255), 255, 100);\n    arrow(p, this.pos.x, this.pos.y, this.pos.x - this.mag.x * 200, this.pos.y - this.mag.y * 200, 3);\n  }\n}\n\nfunction getElectrostaticForce(p: p5, charges: Particle[], point: p5.Vector, charge: number): p5.Vector {\n  const resultingVector = p.createVector(0, 0);\n  \n  for (let i = 0; i < charges.length; i++) {\n    const mPos = charges[i].p;\n    const mCharge = charges[i].m * 100;\n    const distance = p.dist(mPos.x, mPos.y, point.x, point.y);\n    \n    let cosI = p.sin(p.abs(mPos.x - point.x) / distance);\n    let sinJ = p.sin(p.abs(mPos.y - point.y) / distance);\n    \n    if (point.x < mPos.x) cosI = -cosI;\n    if (point.y < mPos.y) sinJ = -sinJ;\n    \n    resultingVector.add(p.createVector(\n      ((-charge * mCharge) / p.pow(distance, 2)) * cosI,\n      ((-charge * mCharge) / p.pow(distance, 2)) * sinJ\n    ));\n  }\n  \n  return resultingVector;\n}\n\nfunction arrow(p: p5, x1: number, y1: number, x2: number, y2: number, offset: number): void {\n  p.line(x1, y1, x2, y2);\n  p.push(); // start new drawing state\n  const angle = p.atan2(y1 - y2, x1 - x2); // gets the angle of the line\n  p.translate(x2, y2); // translates to the destination vertex\n  p.rotate(angle - p.HALF_PI); // rotates the arrow point\n  p.triangle(-offset * 0.6, offset * 1.5, offset * 0.6, offset * 1.5, 0, 0); // draws the arrow point as a triangle\n  p.pop();\n}\n\nexport default function initElectricFieldDemo(container: HTMLElement, config?: DemoConfig): DemoInstance {\n  let p5Instance: p5 | null = null;\n  let particles: Particle[] = [];\n  let forces: Force[] = [];\n  const numForces = 30;\n  let moveParticles = false;\n  \n  // Create a div for the canvas\n  const canvasContainer = document.createElement('div');\n  canvasContainer.style.textAlign = 'center';\n  canvasContainer.id = `field-${Date.now()}`;\n  container.appendChild(canvasContainer);\n  \n  const sketch = (p: p5) => {\n    p.setup = () => {\n      p.noStroke();\n      \n      // Responsive sizing\n      let canvasWidth: number, canvasHeight: number;\n      \n      if (p.windowWidth < 768) {\n        // Mobile: use full window width minus small margin with reasonable height\n        canvasWidth = p.windowWidth - 20;\n        canvasHeight = (p.windowWidth - 20) * 0.65;\n      } else {\n        // Desktop: use config or container-based sizing\n        canvasWidth = config?.width || container.offsetWidth - 20 || p.windowWidth * 0.8;\n        canvasHeight = config?.height || canvasWidth * 0.6;\n      }\n      \n      const canvas = p.createCanvas(canvasWidth, canvasHeight);\n      canvas.parent(canvasContainer);\n      \n      p.background(51);\n      p.frameRate(60);\n      \n      // Initialize force field grid\n      for (let i = p.width / numForces; i < p.width; i += p.width / numForces) {\n        for (let j = p.height / numForces; j < p.height; j += p.height / numForces) {\n          forces.push(new ForceImpl(p, i, j));\n        }\n      }\n    };\n    \n    p.draw = () => {\n      p.colorMode(p.RGB);\n      p.background(51);\n      p.noStroke();\n      \n      // Draw particles\n      for (let i = 0; i < particles.length; i++) {\n        particles[i].paint(p);\n      }\n      \n      // Move particles if enabled\n      if (moveParticles) {\n        for (let i = 0; i < particles.length; i++) {\n          const particlePos = particles[i].p;\n          const particleCharge = particles[i].m;\n          const electroStatic = getElectrostaticForce(p, particles, p.createVector(particlePos.x, particlePos.y), particleCharge);\n          particles[i].addPos(electroStatic);\n        }\n      }\n      \n      // Draw force field\n      p.stroke(250);\n      p.strokeWeight(2);\n      p.colorMode(p.HSB);\n      for (let i = 0; i < forces.length; i++) {\n        forces[i].update(particles);\n        forces[i].paint(p);\n      }\n    };\n    \n    p.mouseClicked = () => {\n      let sgn = -1; // Default to negative charge\n      if (p.keyIsDown(p.CONTROL)) {\n        sgn = 1; // Positive charge when Ctrl is held\n      }\n      particles.push(new ParticleImpl(p, p.mouseX, p.mouseY, sgn * 15));\n    };\n    \n    p.keyPressed = () => {\n      if (p.keyCode === 32) { // Spacebar\n        moveParticles = !moveParticles;\n        return false; // Prevent default behavior\n      }\n    };\n    \n    p.windowResized = () => {\n      if (config?.width && config?.height) {\n        // If fixed size is specified, don't resize\n        return;\n      }\n      \n      let canvasWidth: number, canvasHeight: number;\n      \n      if (p.windowWidth < 768) {\n        canvasWidth = p.windowWidth - 20;\n        canvasHeight = (p.windowWidth - 20) * 0.65;\n      } else {\n        canvasWidth = container.offsetWidth - 20 || p.windowWidth * 0.8;\n        canvasHeight = canvasWidth * 0.6;\n      }\n      \n      p.resizeCanvas(canvasWidth, canvasHeight);\n    };\n  };\n  \n  // Initialize p5 instance\n  p5Instance = new p5(sketch);\n  \n  // Prevent spacebar from scrolling the page\n  const preventSpaceScroll = (event: KeyboardEvent) => {\n    if (event.code === 'Space' || event.keyCode === 32) {\n      event.preventDefault();\n    }\n  };\n  \n  document.addEventListener('keydown', preventSpaceScroll, true);\n  \n  return {\n    cleanup: () => {\n      if (p5Instance) {\n        p5Instance.remove();\n        p5Instance = null;\n      }\n      document.removeEventListener('keydown', preventSpaceScroll, true);\n      container.innerHTML = '';\n    },\n    \n    resize: () => {\n      if (p5Instance && p5Instance.windowResized) {\n        p5Instance.windowResized();\n      }\n    },\n    \n    pause: () => {\n      if (p5Instance) {\n        p5Instance.noLoop();\n      }\n    },\n    \n    resume: () => {\n      if (p5Instance) {\n        p5Instance.loop();\n      }\n    }\n  };\n}"],"names":["ParticleImpl","p","xPos","yPos","charge","force","ForceImpl","charges","getElectrostaticForce","distance","arrow","point","resultingVector","i","mPos","mCharge","cosI","sinJ","x1","y1","x2","y2","offset","angle","initElectricFieldDemo","container","config","p5Instance","particles","forces","numForces","moveParticles","canvasContainer","sketch","canvasWidth","canvasHeight","j","particlePos","particleCharge","electroStatic","sgn","p5","preventSpaceScroll","event"],"mappings":"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"}